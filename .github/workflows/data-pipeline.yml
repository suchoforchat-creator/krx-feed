name: data-pipeline
on:
  schedule:
    - cron: '30 22 * * 1-5'   # 07:30 KST
    - cron: '00 08 * * 1-5'   # 17:00 KST
  workflow_dispatch:

permissions:
  contents: write

jobs:
  collect_0730:
    if: github.event.schedule == '30 22 * * 1-5'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - run: pip install -r requirements.txt
      - run: python pipeline.py --phase 0730 --tz Asia/Seoul
      - run: python tools/csv_to_json.py
      - run: git config user.name 'bot' && git config user.email 'bot@users.noreply.github.com'
      - run: git add out && git commit -m "0730 snapshot $(date -u +%F)" || echo "no changes"
      - name: Rebase onto latest remote
        run: |
          BRANCH="${GITHUB_REF##*/}"
          git fetch origin "$BRANCH"
          git rebase "origin/$BRANCH" || {
            git rebase --abort || true
            exit 1
          }
      - run: git push
  finalize_1700:
    if: github.event.schedule == '00 08 * * 1-5'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - run: pip install -r requirements.txt
      - run: python pipeline.py --phase 1700 --tz Asia/Seoul --reconcile
      - run: python update_history.py --latest out/latest.csv --history out/history.csv --days 90
      - run: python tools/csv_to_json.py
      - run: git config user.name 'bot' && git config user.email 'bot@users.noreply.github.com'
      - run: git add out ':!out/latest.json' ':!out/history.json' || true
      - name: Commit history snapshot
        run: |
          stamp=$(TZ=Asia/Seoul date '+%Y-%m-%d %H:%M:%S KST')
          git commit -m "final: update history (${stamp})" || echo "no changes"
      - name: Commit JSON artifacts
        run: |
          git add out/latest.json out/history.json
          git diff --cached --quiet || git commit -m "chore: add JSON artifacts (latest/history)"
      - name: Rebase onto latest remote
        run: |
          BRANCH="${GITHUB_REF##*/}"
          git fetch origin "$BRANCH"
          git rebase "origin/$BRANCH" || {
            git rebase --abort || true
            exit 1
          }
      - run: git push
